# This is a basic workflow to help you get started with Actions

name: test2

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Set release version number
      - name: Set release version number
        run: RELEASE_VERSION=${{ env.GITHUB_RUN_NUMBER }}

      - name: echo env
        run: echo $RELEASE_VERSION
        
      - name: Run a Gradle build with JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'
      
      - name: Give permission to a gradlew file
        run: chmod +x ./gradlew
      
      - name: Source build to gradle
        run: |
          ./gradlew build --no-daemon
          ls -al ./build/libs
          cp ./build/libs/*.war ./Docker/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Check Docker deamon
        run: docker ps

      - name: Docker image builld
        run: |
          cd ./Docker
          docker build -t "${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_v$RELEASE_VERSION" .
          docker tag "${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_v$RELEASE_VERSION" ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        run: |
          docker push "${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_v$RELEASE_VERSION"
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_latest

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: siluniv
          location: us-central1-c
          project_id: deft-envoy-346612
          credentials: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
      
      - name: Get GKE Cluster pod
        run: kubectl get pod -o wide

      - name: Deployment Rollout
        run: kubectl rollout restart deploy was-deployment

      - name: Rename file
        run: mv ./build/libs/my-spring-board-0.0.1-SNAPSHOT.war ./build/libs/backup-`date +%Y%m%d%H%M%S`.war 

      - name: Cloud Storage Uploader
        uses: google-github-actions/upload-cloud-storage@v0.9.0
        with:
          credentials: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          path: ./build/libs
          destination: sil-bucket-3
          glob: '*.war'
          parent: false